// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: shop.proto

package msg

import (
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"

	proto "github.com/gogo/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type S2C_BuyItem_E_Err int32

const (
	S2C_BuyItem_E_Err_ S2C_BuyItem_E_Err = 0
	///成功
	S2C_BuyItem_E_Err_Succeed S2C_BuyItem_E_Err = 1
	///失败,已拥有(仅皮肤等不能重复购买的商品)
	S2C_BuyItem_E_Err_Already_Have S2C_BuyItem_E_Err = 2
	///失败,钱不够
	S2C_BuyItem_E_Err_Not_Enough_Money S2C_BuyItem_E_Err = 3
	///失败,未知
	S2C_BuyItem_E_Err_UnKnown S2C_BuyItem_E_Err = 4
)

var S2C_BuyItem_E_Err_name = map[int32]string{
	0: "E_Err_",
	1: "E_Err_Succeed",
	2: "E_Err_Already_Have",
	3: "E_Err_Not_Enough_Money",
	4: "E_Err_UnKnown",
}

var S2C_BuyItem_E_Err_value = map[string]int32{
	"E_Err_":                 0,
	"E_Err_Succeed":          1,
	"E_Err_Already_Have":     2,
	"E_Err_Not_Enough_Money": 3,
	"E_Err_UnKnown":          4,
}

func (x S2C_BuyItem_E_Err) String() string {
	return proto.EnumName(S2C_BuyItem_E_Err_name, int32(x))
}

func (S2C_BuyItem_E_Err) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0f3030369b20fd61, []int{3, 0}
}

///获取拥有的道具
type C2S_GetOwnItems struct {
}

func (m *C2S_GetOwnItems) Reset()         { *m = C2S_GetOwnItems{} }
func (m *C2S_GetOwnItems) String() string { return proto.CompactTextString(m) }
func (*C2S_GetOwnItems) ProtoMessage()    {}
func (*C2S_GetOwnItems) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3030369b20fd61, []int{0}
}
func (m *C2S_GetOwnItems) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_GetOwnItems) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_GetOwnItems.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_GetOwnItems) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_GetOwnItems.Merge(m, src)
}
func (m *C2S_GetOwnItems) XXX_Size() int {
	return m.Size()
}
func (m *C2S_GetOwnItems) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_GetOwnItems.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_GetOwnItems proto.InternalMessageInfo

type S2C_GetOwnItems struct {
	Items []*Item `protobuf:"bytes,1,rep,name=Items,proto3" json:"Items,omitempty"`
}

func (m *S2C_GetOwnItems) Reset()         { *m = S2C_GetOwnItems{} }
func (m *S2C_GetOwnItems) String() string { return proto.CompactTextString(m) }
func (*S2C_GetOwnItems) ProtoMessage()    {}
func (*S2C_GetOwnItems) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3030369b20fd61, []int{1}
}
func (m *S2C_GetOwnItems) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_GetOwnItems) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_GetOwnItems.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_GetOwnItems) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_GetOwnItems.Merge(m, src)
}
func (m *S2C_GetOwnItems) XXX_Size() int {
	return m.Size()
}
func (m *S2C_GetOwnItems) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_GetOwnItems.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_GetOwnItems proto.InternalMessageInfo

func (m *S2C_GetOwnItems) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

///购买物品
type C2S_BuyItem struct {
	///要购买的物品在item表中的id
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	///购买数量
	Num int64 `protobuf:"varint,2,opt,name=Num,proto3" json:"Num,omitempty"`
}

func (m *C2S_BuyItem) Reset()         { *m = C2S_BuyItem{} }
func (m *C2S_BuyItem) String() string { return proto.CompactTextString(m) }
func (*C2S_BuyItem) ProtoMessage()    {}
func (*C2S_BuyItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3030369b20fd61, []int{2}
}
func (m *C2S_BuyItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_BuyItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_BuyItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_BuyItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_BuyItem.Merge(m, src)
}
func (m *C2S_BuyItem) XXX_Size() int {
	return m.Size()
}
func (m *C2S_BuyItem) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_BuyItem.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_BuyItem proto.InternalMessageInfo

func (m *C2S_BuyItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *C2S_BuyItem) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

type S2C_BuyItem struct {
	///要购买的物品在item表中的id
	Id  int64             `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Err S2C_BuyItem_E_Err `protobuf:"varint,2,opt,name=Err,proto3,enum=msg.S2C_BuyItem_E_Err" json:"Err,omitempty"`
}

func (m *S2C_BuyItem) Reset()         { *m = S2C_BuyItem{} }
func (m *S2C_BuyItem) String() string { return proto.CompactTextString(m) }
func (*S2C_BuyItem) ProtoMessage()    {}
func (*S2C_BuyItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3030369b20fd61, []int{3}
}
func (m *S2C_BuyItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_BuyItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_BuyItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_BuyItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_BuyItem.Merge(m, src)
}
func (m *S2C_BuyItem) XXX_Size() int {
	return m.Size()
}
func (m *S2C_BuyItem) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_BuyItem.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_BuyItem proto.InternalMessageInfo

func (m *S2C_BuyItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *S2C_BuyItem) GetErr() S2C_BuyItem_E_Err {
	if m != nil {
		return m.Err
	}
	return S2C_BuyItem_E_Err_
}

func init() {
	proto.RegisterEnum("msg.S2C_BuyItem_E_Err", S2C_BuyItem_E_Err_name, S2C_BuyItem_E_Err_value)
	proto.RegisterType((*C2S_GetOwnItems)(nil), "msg.C2S_GetOwnItems")
	proto.RegisterType((*S2C_GetOwnItems)(nil), "msg.S2C_GetOwnItems")
	proto.RegisterType((*C2S_BuyItem)(nil), "msg.C2S_BuyItem")
	proto.RegisterType((*S2C_BuyItem)(nil), "msg.S2C_BuyItem")
}

func init() { proto.RegisterFile("shop.proto", fileDescriptor_0f3030369b20fd61) }

var fileDescriptor_0f3030369b20fd61 = []byte{
	// 288 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xb1, 0x6a, 0xeb, 0x30,
	0x14, 0x86, 0x2d, 0xeb, 0x26, 0x70, 0x4f, 0x68, 0xa2, 0x68, 0x08, 0x26, 0x83, 0x1a, 0x3c, 0x65,
	0x72, 0xc1, 0x7d, 0x82, 0x26, 0x98, 0x36, 0x94, 0xa6, 0x10, 0xd3, 0x59, 0xa4, 0xb1, 0x70, 0x0a,
	0x95, 0x14, 0x64, 0xbb, 0xc1, 0x6f, 0xd1, 0xa7, 0xe9, 0x33, 0x74, 0xcc, 0xd8, 0xb1, 0xd8, 0x2f,
	0x52, 0x24, 0x0f, 0xcd, 0xd2, 0xed, 0x3b, 0x1f, 0xe7, 0xfc, 0x3f, 0x1c, 0x80, 0x62, 0xaf, 0x0f,
	0xd1, 0xc1, 0xe8, 0x52, 0x53, 0x2c, 0x8b, 0x7c, 0x0a, 0x2f, 0xa5, 0x90, 0x9d, 0x08, 0xc7, 0x30,
	0x5a, 0xc6, 0x29, 0xbf, 0x15, 0xe5, 0xe3, 0x51, 0xad, 0x4a, 0x21, 0x8b, 0x30, 0x86, 0x51, 0x1a,
	0x2f, 0xcf, 0x15, 0xbd, 0x84, 0x9e, 0x83, 0x00, 0xcd, 0xf0, 0x7c, 0x10, 0xff, 0x8f, 0x64, 0x91,
	0x47, 0xd6, 0x6c, 0x3a, 0x1f, 0x5e, 0xc1, 0xc0, 0xc6, 0x2c, 0xaa, 0xda, 0xce, 0x74, 0x08, 0xfe,
	0x2a, 0x0b, 0xd0, 0x0c, 0xcd, 0xf1, 0xc6, 0x5f, 0x65, 0x94, 0x00, 0x5e, 0x57, 0x32, 0xf0, 0x9d,
	0xb0, 0x18, 0x7e, 0x20, 0x18, 0xd8, 0x96, 0xbf, 0x2e, 0xe6, 0x80, 0x13, 0x63, 0xdc, 0xc5, 0x30,
	0x9e, 0xb8, 0xbe, 0xb3, 0xf5, 0x28, 0xe1, 0x89, 0x31, 0x1b, 0xbb, 0x12, 0x4a, 0xe8, 0xb9, 0x89,
	0x02, 0xf4, 0x1d, 0x70, 0xe2, 0xd1, 0x31, 0x5c, 0x74, 0x9c, 0x56, 0xbb, 0x9d, 0x10, 0x19, 0x41,
	0x74, 0x02, 0xb4, 0x53, 0x37, 0xaf, 0x46, 0x6c, 0xb3, 0x9a, 0xdf, 0x6d, 0xdf, 0x04, 0xf1, 0xe9,
	0x14, 0x26, 0x9d, 0x5f, 0xeb, 0x92, 0x27, 0x4a, 0x57, 0xf9, 0x9e, 0x3f, 0x68, 0x25, 0x6a, 0x82,
	0x7f, 0x63, 0x9e, 0xd4, 0xbd, 0xd2, 0x47, 0x45, 0xfe, 0x2d, 0x82, 0xcf, 0x86, 0xa1, 0x53, 0xc3,
	0xd0, 0x77, 0xc3, 0xd0, 0x7b, 0xcb, 0xbc, 0x53, 0xcb, 0xbc, 0xaf, 0x96, 0x79, 0xcf, 0x7d, 0xf7,
	0xd1, 0xeb, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x2b, 0x84, 0x15, 0x70, 0x01, 0x00, 0x00,
}

func (m *C2S_GetOwnItems) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_GetOwnItems) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_GetOwnItems) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *S2C_GetOwnItems) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_GetOwnItems) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_GetOwnItems) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintShop(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2S_BuyItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_BuyItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_BuyItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Num != 0 {
		i = encodeVarintShop(dAtA, i, uint64(m.Num))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintShop(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_BuyItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_BuyItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_BuyItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Err != 0 {
		i = encodeVarintShop(dAtA, i, uint64(m.Err))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintShop(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintShop(dAtA []byte, offset int, v uint64) int {
	offset -= sovShop(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *C2S_GetOwnItems) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *S2C_GetOwnItems) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovShop(uint64(l))
		}
	}
	return n
}

func (m *C2S_BuyItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovShop(uint64(m.Id))
	}
	if m.Num != 0 {
		n += 1 + sovShop(uint64(m.Num))
	}
	return n
}

func (m *S2C_BuyItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovShop(uint64(m.Id))
	}
	if m.Err != 0 {
		n += 1 + sovShop(uint64(m.Err))
	}
	return n
}

func sovShop(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozShop(x uint64) (n int) {
	return sovShop(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *C2S_GetOwnItems) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShop
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_GetOwnItems: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_GetOwnItems: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipShop(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShop
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShop
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_GetOwnItems) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShop
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_GetOwnItems: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_GetOwnItems: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShop
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthShop
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthShop
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &Item{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipShop(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShop
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShop
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2S_BuyItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShop
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_BuyItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_BuyItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShop
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Num", wireType)
			}
			m.Num = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShop
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Num |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipShop(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShop
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShop
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_BuyItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowShop
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_BuyItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_BuyItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShop
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			m.Err = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowShop
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Err |= S2C_BuyItem_E_Err(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipShop(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthShop
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthShop
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipShop(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowShop
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowShop
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowShop
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthShop
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupShop
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthShop
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthShop        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowShop          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupShop = fmt.Errorf("proto: unexpected end of group")
)
