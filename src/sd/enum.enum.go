// Code generated by protoc-gen-enum-go. DO NOT EDIT IT!!!
// source: enum.proto

/*
It has these top-level messages:
*/

package sd

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// enum [E_Item] begin

///物品类型枚举
type E_Item int32

const (
	E_Item_ E_Item = 0
	///货币
	E_Item_Money E_Item = 1
)

var E_Item_name = map[int32]string{
	0: "E_Item_",
	1: "E_Item_Money",
}

var E_Item_value = map[string]int32{
	"E_Item_":      0,
	"E_Item_Money": 1,
}

var E_Item_Slice = []int32{
	0,
	1,
}

func (x E_Item) String() string {
	if name, ok := E_Item_name[int32(x)]; ok {
		return name
	}
	return ""
}

func E_Item_Len() int {
	return len(E_Item_Slice)
}

func Check_E_Item_I(value int32) bool {
	if _, ok := E_Item_name[value]; ok && value != 0 {
		return true
	}
	return false
}

func Check_E_Item(value E_Item) bool {
	return Check_E_Item_I(int32(value))
}

func Each_E_Item(f func(E_Item) bool) {
	for _, value := range E_Item_Slice {
		if !f(E_Item(value)) {
			break
		}
	}
}

func Each_E_Item_I(f func(int32) bool) {
	for _, value := range E_Item_Slice {
		if !f(value) {
			break
		}
	}
}

// enum [E_Item] end
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// enum [E_Money] begin

///货币类型枚举
type E_Money int32

const (
	E_Money_ E_Money = 0
	///金币
	E_Money_Gold E_Money = 1
	///钻石
	E_Money_Diamond E_Money = 2
	///积分
	E_Money_Point E_Money = 3
)

var E_Money_name = map[int32]string{
	0: "E_Money_",
	1: "E_Money_Gold",
	2: "E_Money_Diamond",
	3: "E_Money_Point",
}

var E_Money_value = map[string]int32{
	"E_Money_":        0,
	"E_Money_Gold":    1,
	"E_Money_Diamond": 2,
	"E_Money_Point":   3,
}

var E_Money_Slice = []int32{
	0,
	1,
	2,
	3,
}

func (x E_Money) String() string {
	if name, ok := E_Money_name[int32(x)]; ok {
		return name
	}
	return ""
}

func E_Money_Len() int {
	return len(E_Money_Slice)
}

func Check_E_Money_I(value int32) bool {
	if _, ok := E_Money_name[value]; ok && value != 0 {
		return true
	}
	return false
}

func Check_E_Money(value E_Money) bool {
	return Check_E_Money_I(int32(value))
}

func Each_E_Money(f func(E_Money) bool) {
	for _, value := range E_Money_Slice {
		if !f(E_Money(value)) {
			break
		}
	}
}

func Each_E_Money_I(f func(int32) bool) {
	for _, value := range E_Money_Slice {
		if !f(value) {
			break
		}
	}
}

// enum [E_Money] end
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
